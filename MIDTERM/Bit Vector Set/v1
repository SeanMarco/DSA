#include <stdio.h>
#include <stdbool.h>

void initialize(unsigned char *set) {
    *set = 0;
}

void insert(unsigned char *set, int element) {
    if (element < 0 || element > 7) return;
    unsigned char mask = 1 << element;
    *set |= mask;
}

void delete(unsigned char *set, int element) {
    if (element < 0 || element > 7) return;
    unsigned char mask = ~(1 << element);
    *set &= mask;
}

bool find(unsigned char set, int element) {
    if (element < 0 || element > 7) return false;
    unsigned char mask = 1 << element;
    return (set & mask) != 0;
}

unsigned char union_set(unsigned char A, unsigned char B) {
    return A | B;
}

unsigned char intersection(unsigned char A, unsigned char B) {
    return A & B;
}

unsigned char difference(unsigned char A, unsigned char B) {
    return A & ~B;
}

void display(unsigned char set) {
    printf("{");
    int first = 1;
    for (int i = 0; i < 8; i++) {
        if (set & (1 << i)) {
            if (!first) printf(", ");
            printf("%d", i);
            first = 0;
        }
    }
    printf("}\n");
}

int main() {
    unsigned char A, B, C;

    initialize(&A);
    insert(&A, 1);
    insert(&A, 6);

    printf("A = "); display(A);

    delete(&A, 6);
    printf("A after deleting 6 = "); display(A);

    B = 200;
    printf("B = "); display(B);

    C = union_set(A, B);
    printf("Union A,B = "); display(C);

    C = intersection(A, B);
    printf("Intersection A,B = "); display(C);

    C = difference(A, B);
    printf("Difference A-B = "); display(C);

    printf("Find element 1 in A: %s\n", find(A, 1) ? "Yes" : "No");
    printf("Find element 6 in A: %s\n", find(A, 6) ? "Yes" : "No");

    return 0;
}
